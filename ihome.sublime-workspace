{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"par",
				"parseFloat〔function〕"
			],
			[
				"static",
				"STATICFILES_DIRS"
			],
			[
				"BA",
				"BASE_DIR〔variable〕"
			],
			[
				"def",
				"defs\tMethod"
			],
			[
				"img",
				"imgName"
			],
			[
				"sca",
				"scaleImagePartial〔variable〕"
			],
			[
				"sta",
				"staticmethod"
			],
			[
				"mk",
				"makedirs〔function〕"
			],
			[
				"input",
				"inputPath〔variable〕"
			],
			[
				"log",
				"log_file"
			],
			[
				"write",
				"write_log"
			],
			[
				"post",
				"postDate"
			],
			[
				"pos",
				"postDate"
			],
			[
				"st",
				"staticCode〔variable〕"
			],
			[
				"datas",
				"datas〔variable〕"
			],
			[
				"data",
				"dataSock〔variable〕"
			],
			[
				"HTTP",
				"HTTP/1.1"
			],
			[
				"req",
				"reqFilePath"
			],
			[
				"recv",
				"recvData〔variable〕"
			],
			[
				"epoll",
				"EPOLLIN〔variable〕"
			],
			[
				"epo",
				"EPOLLET〔variable〕"
			],
			[
				"Ep",
				"EPOLLET"
			],
			[
				"string",
				"string_pass"
			],
			[
				"ht",
				"htmlSRC〔variable〕"
			],
			[
				"conte",
				"contentAlted〔variable〕"
			],
			[
				"full",
				"full_name〔variable〕"
			],
			[
				"root",
				"rootURL"
			],
			[
				"udp",
				"udpSocket"
			],
			[
				"bindAddr",
				"bindAddr"
			],
			[
				"clien",
				"client_addr"
			],
			[
				"cli",
				"client_addr〔variable〕"
			],
			[
				"bind",
				"bindAddr〔variable〕"
			],
			[
				"thre",
				"threadNum"
			],
			[
				"file",
				"fileEnqueue"
			],
			[
				"time",
				"timeCount"
			],
			[
				"get",
				"getTimeCount"
			],
			[
				"class",
				"classmethod"
			],
			[
				"exit",
				"exit_thread〔function〕"
			],
			[
				"mu",
				"mutex〔variable〕"
			],
			[
				"mut",
				"mutexFlag〔variable〕"
			],
			[
				"self",
				"self"
			],
			[
				"dis",
				"distance"
			],
			[
				"star",
				"start_new_thread〔function〕"
			],
			[
				"if",
				"ifmain\tif __name__ == '__main__'"
			]
		]
	},
	"buffers":
	[
		{
			"file": "handlers/Profile.py",
			"settings":
			{
				"buffer_size": 2154,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "# coding:utf-8\n\nimport logging\n\nfrom .BaseHandler import BaseHandler\nfrom utils.image_storage import storage\nfrom utils.common import require_logined\nfrom utils.response_code import RET\nfrom config import image_url_prefix\n\nclass AvatarHandler(BaseHandler):\n    \"\"\"头像\"\"\"\n    @require_logined\n    def post(self):\n        user_id = self.session.data[\"user_id\"]\n        try:\n            avatar = self.request.files[\"avatar\"][0][\"body\"]\n        except Exception as e:\n            logging.error(e)\n            return self.write(dict(errno=RET.PARAMERR, errmsg=\"参数错误\"))\n        try:\n            img_name = storage(avatar)\n        except Exception as e:\n            logging.error(e)\n            img_name = None\n        if not img_name:\n            return self.write({\"errno\":RET.THIRDERR, \"errmsg\":\"qiniu error\"})\n        try:\n            ret = self.db.execute(\"update ih_user_profile set up_avatar=%s where up_user_id=%s\", img_name, user_id)\n        except Exception as e:\n            logging.error(e)\n            return self.write({\"errno\":RET.DBERR, \"errmsg\":\"upload failed\"})\n        img_url = image_url_prefix + img_name\n        self.write({\"errno\":RET.OK, \"errmsg\":\"OK\", \"url\":img_url})\n\n\nclass ProfileHandler(BaseHandler):\n    \"\"\"个人信息\"\"\"\n    @require_logined\n    def get(self):\n        user_id = self.session.data['user_id']\n        try:\n            ret = self.db.get(\"select up_name,up_mobile,up_avatar from ih_user_profile where up_user_id=%s\", user_id)\n        except Exception as e:\n            logging.error(e)\n            return self.write({\"errno\":RET.DBERR, \"errmsg\":\"get data error\"})\n        if ret[\"up_avatar\"]:\n            img_url = image_url_prefix + ret[\"up_avatar\"]\n        else:\n            img_url = None\n        self.write({\"errno\":RET.OK, \"errmsg\":\"OK\", \"data\":{\"user_id\":user_id, \"name\":ret[\"up_name\"], \"mobile\":ret[\"up_mobile\"], \"avatar\":img_url}})\n\n\nclass NameHandler(BaseHandler):\n    \"\"\"用户名\"\"\"\n    @require_logined\n    def post(self):\n        user_id = self.session.data[\"user_id\"]\n        name = self.json_args.get(\"name\")\n        if name in (None, \"\"):\n            return self.write({\"errno\":RET.PARAMERR, \"errmsg\":\"params error\"})\n        try:\n            self.db.execute(\"update ih_user_profile set up_name=%s where up_user_id=%s\", name, user_id)\n        except Exception as e:\n            logging.error(e)\n            return self.write({\"errno\":RET.DBERR, \"errmsg\":\"name has exist\"})\n        self.session.data[\"name\"] = name\n        self.session.save()\n        self.write({\"errno\":RET.OK, \"errmsg\":\"OK\"}) \n\n\nclass AuthHandler(BaseHandler):\n    \"\"\"实名认证\"\"\"\n    @require_logined\n    def get(self):\n        user_id = self.session.data[\"user_id\"]\n        try:\n            ret = self.db.get(\"select up_real_name,up_id_card from ih_user_profile where up_user_id=%s\", user_id)\n        except Exception as e:\n            logging.error(e)\n            return self.write({\"errno\":RET.DBERR, \"errmsg\":\"get data failed\"})\n        if not ret:\n            return self.write({\"errno\":RET.NODATA, \"errmsg\":\"no data\"})\n        self.write({\"errno\":RET.OK, \"errmsg\":\"OK\", \"data\":{\"real_name\":ret.get(\"up_real_name\", \"\"), \"id_card\":ret.get(\"up_id_card\", \"\")}})\n\n    @require_logined\n    def post(self):\n        user_id = self.session.data[\"user_id\"]\n        real_name = self.json_args.get(\"real_name\")\n        id_card = self.json_args.get(\"id_card\")\n        if real_name in (None, \"\") or id_card in (None, \"\"):\n            return self.write({\"errno\":RET.PARAMERR, \"errmsg\":\"params error\"})\n        try:\n            self.db.execute(\"update ih_user_profile set up_real_name=%s,up_id_card=%s where up_user_id=%s\", real_name, id_card, user_id)\n        except Exception as e:\n            logging.error(e)\n            return self.write({\"errno\":RET.DBERR, \"errmsg\":\"update failed\"})\n        self.write({\"errno\":RET.OK, \"errmsg\":\"OK\"})\n",
			"file": "/home/linqzhou/ftp/share/Project/Tornado_Project/handlers/Profile.py",
			"file_size": 3869,
			"file_write_time": 131245957970000000,
			"settings":
			{
				"buffer_size": 3835,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "function showSuccessMsg() {\n    var $save_success = $('.save_success');\n    $save_success.fadeIn('fast', function() {\n        setTimeout(function(){\n            $save_success.fadeOut('fast',function(){}); \n        },1000) \n    });\n}\n\nfunction getCookie(name) {\n    var r = document.cookie.match(\"\\\\b\" + name + \"=([^;]*)\\\\b\");\n    return r ? r[1] : undefined;\n}\n\n$(function () {\n    $.get(\"/api/profile\", function (data) {\n        if (\"4101\" == data.errno) {\n            location.href = \"/login.html\";\n        } else if (\"0\" == data.errno) {\n            $(\"#user-name\").val(data.data.name);\n            if (data.data.avatar) {\n                $(\"#user-avatar\").attr(\"src\", data.data.avatar);\n            };\n        };\n    });\n\n    //表单提交 \n    $(\"#form-avatar\").submit(function (e) {\n        e.preventDefault();\n        $(this).ajaxSubmit({\n            url: \"/api/profile/avatar\",\n            type: \"POST\",\n            contentType: \"application/json\",\n            headers: {\n                \"X-XSRFTOKEN\": getCookie(\"_xsrf\"),\n            }\n            dataType: \"json\",\n            success: function (data) {\n                if (\"\")\n            }\n        });\n\n    });\n\n\n});",
			"file": "static/js/ihome/profile.js",
			"file_size": 1073,
			"file_write_time": 131248081744786265,
			"settings":
			{
				"buffer_size": 1171,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "html/profile.html",
			"settings":
			{
				"buffer_size": 3428,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "config.py",
			"settings":
			{
				"buffer_size": 741,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "utils/response_code.py",
			"settings":
			{
				"buffer_size": 1322,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 204.0,
		"last_filter": "ssjs",
		"selected_items":
		[
			[
				"ssjs",
				"Set Syntax: JavaScript"
			],
			[
				"sssql",
				"Set Syntax: SQL"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"ssh",
				"Set Syntax: HTML"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				":pac",
				"Preferences: Package Control Settings – Default"
			],
			[
				"Package",
				"Preferences: Browse Packages"
			]
		],
		"width": 593.0
	},
	"console":
	{
		"height": 162.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), pleasesry manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/linqzhou/ftp/share/Project/ihome_20161122",
		"/home/linqzhou/ftp/share/Project/ihome_20161122/handlers",
		"/home/linqzhou/ftp/share/Project/ihome_20161122/html",
		"/home/linqzhou/ftp/share/Project/ihome_20161122/static",
		"/home/linqzhou/ftp/share/Project/ihome_20161122/static/js",
		"/home/linqzhou/ftp/share/Project/ihome_20161122/static/js/ihome",
		"/home/linqzhou/ftp/share/Project/ihome_20161122/utils",
		"/home/linqzhou/ftp/share/Project/Tornado_Project"
	],
	"file_history":
	[
		"/home/linqzhou/ftp/share/Project/ihome_20161122/utils/image_storage.py",
		"/home/linqzhou/ftp/share/Project/ihome_20161122/urls.py",
		"/home/linqzhou/ftp/share/Project/ihome_20161122/utils/session.py",
		"/home/linqzhou/ftp/share/Project/ihome_20161122/utils/common.py",
		"/home/linqzhou/ftp/share/Project/Tornado_Project/config.py",
		"/home/linqzhou/ftp/share/Project/Tornado_Project/handlers/Passport.py",
		"/home/linqzhou/ftp/share/Project/ihome_20161122/html/index.html",
		"/home/linqzhou/ftp/share/Project/ihome_20161122/static/js/ihome/index.js",
		"/home/linqzhou/ftp/share/Project/ihome_20161122/handlers/Passport.py",
		"/home/linqzhou/ftp/share/Project/Tornado_Project_demo/handlers/VerifyCode.py",
		"/home/linqzhou/ftp/share/Project/Tornado_Project_demo/urls.py",
		"/home/linqzhou/ftp/share/Project/Tornado_Project_demo/utils/session.py",
		"/home/linqzhou/ftp/share/Project/Tornado_Project_demo/libs/yuntongxun/CCP.py",
		"/home/linqzhou/ftp/share/Project/Tornado_Project_demo/DBInit.sql",
		"/home/linqzhou/ftp/share/Project/tornado_test/statics/html/index.html",
		"/home/linqzhou/ftp/share/Project/FreshDaily_Pro/FreshDaily/settings.py",
		"/home/linqzhou/ftp/share/Project/FreshDaily/FreshDaily/settings.py",
		"/home/linqzhou/ftp/share/Project/FreshDaily/templates/FreshDaily/place_order.html",
		"/home/linqzhou/ftp/share/Project/FreshDaily/templates/search/indexes/Goods/good_text.txt",
		"/home/linqzhou/ftp/share/Project/FreshDaily/FreshDaily/urls.py",
		"/home/linqzhou/ftp/share/Project/FreshDaily/static/css/main.css",
		"/home/linqzhou/ftp/share/Project/FreshDaily/templates/FreshDaily/goods_base.html",
		"/home/linqzhou/ftp/share/Project/FreshDaily/static/js/cart.js",
		"/home/linqzhou/ftp/share/Project/FreshDaily/templates/FreshDaily/cart.html",
		"/home/linqzhou/ftp/share/Project/FreshDaily/templates/FreshDaily/base.html",
		"/home/linqzhou/ftp/share/Project/input_number_only.js",
		"/home/linqzhou/ftp/share/Project/FreshDaily/templates/FreshDaily/order_base.html",
		"/home/linqzhou/ftp/share/Project/FreshDaily/Goods/views.py",
		"/home/linqzhou/ftp/share/Project/FreshDaily/templates/FreshDaily/cart_base.html",
		"/home/linqzhou/ftp/share/Project/FreshDaily/Orders/views.py",
		"/home/linqzhou/ftp/share/Project/FreshDaily/Goods/urls.py",
		"/home/linqzhou/ftp/share/Project/FreshDaily/Users/urls.py",
		"/home/linqzhou/ftp/share/Project/FreshDaily/Users/views.py",
		"/home/linqzhou/ftp/share/Project/FreshDaily/templates/FreshDaily/detail.html",
		"/home/linqzhou/ftp/share/Project/FreshDaily/templates/Orders/cart.html",
		"/home/linqzhou/ftp/share/Project/FreshDaily/templates/FreshDaily/user_center_base.html",
		"/home/linqzhou/ftp/share/Project/FreshDaily/templates/FreshDaily/register.html",
		"/home/linqzhou/ftp/share/Project/FreshDaily/templates/FreshDaily/user_center_info.html",
		"/home/linqzhou/ftp/share/Project/FreshDaily/templates/Goods/detail.html",
		"/home/linqzhou/ftp/share/Project/FreshDaily/Goods/models.py",
		"/home/linqzhou/ftp/share/Project/FreshDaily/templates/FreshDaily/login.html",
		"/home/linqzhou/ftp/share/Project/FreshDaily/Orders/urls.py",
		"/home/linqzhou/ftp/share/Project/FreshDaily/Goods/admin.py",
		"/home/linqzhou/ftp/share/Project/FreshDaily/Orders/models.py",
		"/home/linqzhou/ftp/share/Project/FreshDaily/Users/models.py",
		"/home/linqzhou/ftp/share/Project/MakeChineseReadAgain/templates/books/editor.html",
		"/etc/nginx/nginx.conf",
		"/home/linqzhou/ftp/share/Project/MakeChineseReadAgain/nginx.conf",
		"/home/linqzhou/ftp/share/Project/MakeChineseReadAgain/books/admin.py",
		"/home/linqzhou/ftp/share/Project/MakeChineseReadAgain/uwsgi.ini",
		"/home/linqzhou/ftp/share/Project/MakeChineseReadAgain/templates/books/profile.html",
		"/home/linqzhou/ftp/share/Project/MakeChineseReadAgain/templates/books/area.html",
		"/home/linqzhou/sublime_imfix.c",
		"/home/linqzhou/ftp/share/Project/MakeChineseReadAgain/web/models.py",
		"/home/linqzhou/ftp/share/Project/MakeChineseReadAgain/books/models.py",
		"/home/linqzhou/.ssh/id_rsa.pub",
		"/home/linqzhou/ftp/share/Python_Advanced/homework01_7_game.py",
		"/home/linqzhou/ftp/share/Python_Advanced/p02.py",
		"/home/linqzhou/ftp/share/Python_Advanced/p01_generator.py",
		"/home/linqzhou/ftp/share/Python_Advanced/day11/p01_generator.py",
		"/home/linqzhou/ftp/share/Python_Advanced/homework02_decorator.py",
		"/home/linqzhou/temp/WebServer.py",
		"/home/linqzhou/ftp/share/Python Advanced/day06/tcp_server_select.py",
		"/home/linqzhou/ftp/share/Python_Advanced/day06/tcp_server_pool.py",
		"/home/linqzhou/ftp/share/Python_Advanced/day06/tcp_server_multiprocessing.py",
		"/home/linqzhou/ftp/share/Python_Advanced/day06/tcp_server.py",
		"/home/linqzhou/ftp/share/Python_Basic/day07/primeNum.py",
		"/home/linqzhou/ftp/share/WebServer.py",
		"/home/linqzhou/temp/html/404.html",
		"/home/linqzhou/ftp/share/Python_Advanced/day06/000.py",
		"/home/linqzhou/ftp/share/Python_Advanced/day07/re_p02.py",
		"/home/linqzhou/ftp/share/Python_Advanced/day07/re_p01.py",
		"/usr/lib/python2.7/Queue.py",
		"/home/linqzhou/ftp/share/Python_Advanced/day03/p05_fakeICQ_class.py",
		"/home/linqzhou/ftp/share/Python_Advanced/day03/p04_fake_QQ.py",
		"/home/linqzhou/ftp/share/Python_Advanced/day02/homework02_multi_tasks_file_write.py",
		"/home/linqzhou/ftp/share/Python_Advanced/day01/demo01.py",
		"/home/linqzhou/ftp/share/Python Advanced/day06/tcp_server_pool.py",
		"/home/linqzhou/ftp/share/Python_Advanced/day03/p02_echo_server.py",
		"/home/linqzhou/ftp/share/Python_Advanced/day03/p03_chatroom.py",
		"/home/linqzhou/ftp/share/Python_Advanced/day01/LetBulletsFly.py",
		"/home/linqzhou/ftp/share/Python_Advanced/day01/demo02.py",
		"/home/linqzhou/ftp/share/Python_Advanced/day03/p01_socket_demo.py",
		"/home/linqzhou/ftp/share/Python_Advanced/day02/p02.py",
		"/home/linqzhou/ftp/share/Python_Advanced/day02/p01.py",
		"/home/linqzhou/ftp/share/Python_Advanced/day02/demo_comsumer_producer.py",
		"/home/linqzhou/ftp/share/Python_Advanced/day02/demo_comsumer_producer_queue.py",
		"/home/linqzhou/ftp/share/Python_Advanced/day02/homework01.py",
		"/home/linqzhou/ftp/share/Python_Advanced/day01/p01.py",
		"/usr/lib/python2.7/queue.py",
		"/home/linqzhou/temp/sublime-imfix.c",
		"/home/linqzhou/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/linqzhou/ftp/share/day09/gun_opp.py",
		"/home/linqzhou/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
		"/home/linqzhou/.config/sublime-text-3/Packages/User/Distraction Free.sublime-settings",
		"/home/linqzhou/.config/sublime-text-3/Packages/User/JSON.sublime-settings",
		"/home/linqzhou/.config/sublime-text-3/Packages/Package Control/Package Control.sublime-settings",
		"/home/linqzhou/ftp/share/Day03/homework04&05.py",
		"/home/linqzhou/ftp/share/Day04/WeekDayTest.py",
		"/home/linqzhou/ftp/share/Day04/p01.py",
		"/home/linqzhou/ftp/share/SimpleCalc_v0.2.py",
		"/home/linqzhou/ftp/share/Day04/homework_ex_01.py",
		"/home/linqzhou/.config/sublime-text-3/Packages/User/Python.sublime-settings",
		"/home/linqzhou/.config/sublime-text-3/Packages/Default/Default (Linux).sublime-keymap",
		"/home/linqzhou/ftp/share/Namecard.py",
		"/home/linqzhou/ftp/share/helloworld.py"
	],
	"find":
	{
		"height": 49.0
	},
	"find_in_files":
	{
		"height": 123.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"$('.save_success')",
			".",
			"popup_con",
			".image_uploading",
			"uploading",
			"match",
			"passwd",
			"phone",
			"SMSCode",
			"json_args(",
			"json_args",
			"request.body",
			"phone",
			"phonecode",
			"button",
			"self.redis",
			"redis",
			"signature",
			"arg",
			"20",
			"ui",
			"/static",
			"        # day_json = json.dumps(day)\n        # self.write(day_json)\n",
			"\\n",
			"file",
			"subject",
			"model",
			"arg",
			"buy",
			"index",
			"live",
			"goodId",
			"userId",
			"cart_base",
			"sett",
			"input",
			"select",
			"add",
			".num_show",
			"amo",
			"amount",
			"Users",
			"digits=5",
			"digits=8",
			"models.DecimalField(decimal_places=2)",
			"heroinfo",
			"HeroInfo",
			"heroinfo",
			"hname",
			"booktest_areainfo",
			"HOST",
			"limit",
			"elf.feedback",
			"feedback",
			"elf.guess",
			"guess",
			"collection",
			"postData",
			"title",
			"Title",
			"title",
			"respHeader",
			"servSocket",
			"arg",
			"object",
			"arg",
			"getSize",
			"t",
			"timeCount",
			"Passanger",
			"distance",
			"arg",
			"select",
			"multiple",
			"multi"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"areainfo"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "handlers/Profile.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2154,
						"regions":
						{
						},
						"selection":
						[
							[
								1695,
								1695
							]
						],
						"settings":
						{
							"auto_complete": false,
							"is_init_dirty_state": true,
							"open_with_edit": true,
							"side_bar_folders_auto_load_folder": 1,
							"syntax": "Packages/Djaneiro/Syntaxes/Python Django.tmLanguage",
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1581.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/home/linqzhou/ftp/share/Project/Tornado_Project/handlers/Profile.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3835,
						"regions":
						{
						},
						"selection":
						[
							[
								1184,
								1184
							]
						],
						"settings":
						{
							"side_bar_folders_auto_load_folder": 1,
							"syntax": "Packages/Djaneiro/Syntaxes/Python Django.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 465.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "static/js/ihome/profile.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1171,
						"regions":
						{
						},
						"selection":
						[
							[
								1128,
								1128
							]
						],
						"settings":
						{
							"auto_complete": false,
							"origin_encoding": "ASCII",
							"side_bar_folders_auto_load_folder": 1,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 558.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "html/profile.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3428,
						"regions":
						{
						},
						"selection":
						[
							[
								3064,
								3064
							]
						],
						"settings":
						{
							"auto_complete": false,
							"side_bar_folders_auto_load_folder": 1,
							"syntax": "Packages/Djaneiro/Syntaxes/HTML (Django).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2232.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "config.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 741,
						"regions":
						{
						},
						"selection":
						[
							[
								741,
								741
							]
						],
						"settings":
						{
							"auto_complete": false,
							"side_bar_folders_auto_load_folder": 1,
							"syntax": "Packages/Djaneiro/Syntaxes/Python Django.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 651.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "utils/response_code.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1322,
						"regions":
						{
						},
						"selection":
						[
							[
								182,
								182
							]
						],
						"settings":
						{
							"is_init_dirty_state": false,
							"origin_encoding": "UTF-8",
							"side_bar_folders_auto_load_folder": 1,
							"syntax": "Packages/Djaneiro/Syntaxes/Python Django.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 49.0
	},
	"input":
	{
		"height": 38.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "ihome.sublime-project",
	"replace":
	{
		"height": 74.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 625.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 475.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 213.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
